function [m_TPS, t_TPS_cm] = HeatShieldMassOld(altitude_km, velocity_profile, t_vals)
    % TEMPLATES FOR DENSITY, TEMPERATURE, PRESSURE AS FUNCTION OF ALTITUDE
    % DENSITY = GET_DENSITY(ALTITUDE, DATA1, DATA2)
    % PRESSURE = GET_PRESSURE(ALTITUDE, DATA1, DATA2)
    % TEMPERATURE = GET_TEMP(ALTITUDE, DATA1)
    % UNITS ARE KG/M3, PA, K, KM, RESPECTIVELY.
    
    data1 = [
    733.3333333333334, 4000
    730.3647526182738, 3894.3661971830984
    728.4795955218491, 3732.3943661971825
    724.564824846515, 3549.295774647887
    720.6067172264356, 3408.4507042253517
    716.6847237269774, 3232.394366197182
    708.6890574214519, 3028.169014084508
    700.7150595882993, 2802.8169014084497
    685.5543517515348, 2584.507042253521
    670.3791982665223, 2380.281690140844
    648.0462260743951, 2154.929577464789
    620.5706031058145, 1943.6619718309855
    585.929938605995, 1718.3098591549292
    545.092091007584, 1535.2112676056338
    512.4015890213074, 1408.4507042253522
    472.53159985554345, 1281.6901408450703
    434.69122426868915, 1176.0563380281692
    402.9758035391839, 1098.5915492957747
    363.06970025279884, 1007.0422535211268
    330.33586132177686, 922.5352112676069
    299.65330444203687, 838.0281690140831
    265.8938244853738, 753.5211267605641
    231.11592632719396, 661.9718309859154
    203.51029252437706, 577.4647887323943
    182.02239075478514, 528.1690140845063
    173.8389310220296, 507.0422535211274
    162.58577103647528, 478.87323943662045
    161.61791260382807, 422.53521126760563
    161.67569519682195, 366.1971830985925
    159.67497291440955, 316.9014084507046
    157.6670278078729, 274.64788732394345
    153.62946912242685, 211.26760563380412
    143.39472733838932, 190.14084507042298
    134.192849404117, 161.97183098591552
    128.03900325027087, 161.97183098591552
    117.82592993860602, 119.71830985915494
    104.50704225352112, 105.6338028169015
    90.16251354279522, 91.54929577464782
    76.84362585771036, 77.46478873239437
    64.53593355001806, 77.46478873239414
    56.345250993138336, 63.38028169014103
    60.50559768869627, 7.042253521126668
    51.24593716143008, 35.211267605633566
    72.82773564463703, -7.04225352112644
    84.11700975081257, -14.084507042253335
    96.43192488262909, -21.126760563380117
    110.80534488985192, -35.211267605633566
    121.06897797038638, -42.253521126760006
    133.38389310220293, -49.29577464788758
    145.71325388226796, -70.42253521126759
    155.98410978692667, -84.50704225352115    
    ];
    
    data1 = sortrows(data1,2);
    
    data2 = [
        736.842105263158, 3.792690190732223e-9
    730.7017543859648, 8.507942799627515e-9
    723.6842105263158, 2.1836412339771752e-8
    714.0350877192983, 5.2396013530026554e-8
    705.2631578947367, 1.0272967317129136e-7
    693.859649122807, 1.8830150935310454e-7
    683.3333333333331, 3.016700280971453e-7
    671.0526315789473, 5.169520863226409e-7
    654.3859649122805, 8.85866790410065e-7
    636.8421052631579, 0.000001419210395452577
    619.2982456140351, 0.0000024320075132679498
    602.6315789473684, 0.000003405365585016436
    585.9649122807018, 0.000005100377710991141
    565.7894736842104, 0.00000763907784504426
    543.859649122807, 0.000011441409564019243
    520.1754385964912, 0.000017136342300342215
    500.87719298245605, 0.00002399479031387996
    477.1929824561402, 0.00003141058489074873
    449.1228070175439, 0.00004704512425064635
    424.5614035087719, 0.0000658739112407993
    394.7368421052631, 0.00010553385749880813
    370.17543859649123, 0.00015806306873781192
    344.73684210526324, 0.00027086228509336767
    323.6842105263157, 0.0004056833039356789
    308.7719298245614, 0.0006076111446650459
    288.59649122807014, 0.001113739507857865
    269.298245614035, 0.0020414630347954745
    249.99999999999997, 0.003741962364657531
    228.94736842105266, 0.007336637748600004
    211.4035087719298, 0.01438449888287663
    198.24561403508773, 0.0230448082815073
    184.21052631578945, 0.04224068906483458
    173.68421052631578, 0.06767205372282079
    166.66666666666666, 0.09475632026539897
    164.03508771929822, 0.15180516552972514
    164.03508771929822, 0.2782559402207126
    162.28070175438597, 0.5455594781168548
    161.40350877192986, 1.0696452479219296
    162.28070175438597, 1.9606391068744613
    160.5263157894737, 3.844105707405517
    157.89473684210526, 8.061813527211983
    154.3859649122807, 16.90714103473582
    148.24561403508773, 28.97265560913918
    142.10526315789474, 46.41588833612758
    134.21052631578948, 64.99283734753718
    128.07017543859655, 91.00480585213029
    122.80701754385967, 136.30221830031346
    117.54385964912285, 218.36412339772332
    114.91228070175441, 327.054314743274
    107.89473684210529, 374.1962364657538
    98.24561403508773, 457.9506855064374
    85.96491228070178, 599.4842503189402
    77.19298245614036, 784.7599703514599
    66.66666666666669, 960.4088212505379
    61.403508771929836, 1538.6310873807167
    55.26315789473688, 2820.2811042559924
    54.385964912280684, 6326.588544593854
    53.50877192982455, 15180.516552972576
    57.01754385964912, 34053.65585016387
    63.15789473684211, 66766.9293918757
    73.68421052631582, 114414.09564019546
    85.96491228070177, 183298.07108324338
    98.24561403508773, 256659.13434124898
    108.77192982456143, 359381.36638046254
    119.29824561403512, 503215.93592599983
    130.70175438596493, 658739.1124079915
    141.2280701754386, 922385.1039358476
    149.99999999999997, 1207456.0865147319
    157.01754385964912, 1477714.868970749
    ];
    
    [~, idx, ~] = unique(data1(:,2), 'stable'); 
    data1 = data1(idx, :);        
    
    [~, idx, ~] = unique(data2(:,2), 'stable'); 
    data2 = data2(idx, :);    

    %% Chnage velocity
    velocity_profile = velocity_profile * 100;
    
    %% Constants
    gamma = 1.3846;
    R_gas = 3.61491e3; % J/(kg*K)
    Cp = gamma * R_gas / (gamma - 1);
    
    %% Derived profiles
    T_profile = get_temp(altitude_km, data1);        % Temperature [K]
    a_profile = sqrt(gamma * R_gas .* T_profile);    % Speed of sound [m/s]
    Mach_profile = velocity_profile ./ a_profile;    % Mach number [-]
    p_inf = get_pressure(altitude_km, data1, data2);  % Static pressure [Pa]
    density_profile = get_density(altitude_km, data1, data2); % Density [kg/m^3]
    
    %% Stagnation conditions
    P0 = p_inf .* (1 + (gamma - 1)/2 .* Mach_profile.^2).^(gamma/(gamma - 1));
    H_e = Cp .* T_profile + 0.5 .* velocity_profile.^2;
    
    %% Convective heat flux (Suttonâ€“Graves)
    R_eff = 3.0;  % Nose radius [m]
    K2 = 1 / ((0.667/0.0395) + (0.333/0.0797));  % Neptune-specific constant
    q_conv = (K2 / 2) .* sqrt(density_profile ./ R_eff) .* velocity_profile.^3;
    
    %% Radiative equilibrium wall temperature
    sgma = 5.67e-8;  % W/(m^2*K^4)
    emis = 0.864;
    T_w = (q_conv ./ (sgma * emis)).^(0.25);

    %% Radiative
    T_initial = 273 + 15;             % K
    q_rad = emis*(T_w - T_initial);
    q_total = q_conv - q_rad;
    
    %% Total heat load [J/m^2]
    Q_total = trapz(t_vals, q_total);
    
    %% TPS sizing
    A_nose = pi * R_eff^2;      % m^2
    rho_TPS = 960;              % kg/m^3
    cp_TPS = 1250;               % J/(kg*K)
    T_back_max = max(T_w);      % K
    deltaT = T_back_max - T_initial;
    m_areal = Q_total / (cp_TPS * deltaT);  % kg/m^2
    t_TPS_cm = 100 * m_areal / rho_TPS;           % thickness [m]
    m_TPS = m_areal * A_nose;              % total mass [kg]
    
    %% Functions
    function temp = get_temp(alt, data)
        temp = interp1(data(:,2), data(:,1), alt, 'linear', 'extrap');
    end
    
    function pressure = get_pressure(alt, data_t, data_p)
        temp = get_temp(alt, data_t);
        [~, minidx] = min(data_t(:,1));
        alt_min_t = data_t(minidx,2);
        leg = alt > alt_min_t;
        [~, min_t_idx] = min(data_p(:,1));
        min_p = data_p(min_t_idx,2);
    
        if leg
            sub = data_p(data_p(:,2)<min_p,:);
        else
            sub = data_p(data_p(:,2)>min_p,:);
        end
    
        sub(:,2) = log10(sub(:,2));
        [~, idx] = unique(sub(:,1), 'stable'); sub = sub(idx, :);
        logp = interp1(sub(:,1), sub(:,2), temp, 'linear', 'extrap');
        pressure = 10.^logp;
    end
    
    function rho = get_density(alt, data_t, data_p)
        pressure = get_pressure(alt, data_t, data_p);
        temp = get_temp(alt, data_t);
        R = 3.61491e3; % J/(kg*K)
        rho = pressure ./ (temp .* R);
    end

end